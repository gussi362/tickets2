openapi: 3.0.3
info:
  title: 'tickets API'
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://localhost'
paths:
  /api/register:
    post:
      summary: 'Register user'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
  /api/resetPassword:
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: ''
                  example: sit
              required:
                - email
      security: []
  /api/reset:
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                  description: ''
                  example: saepe
                password:
                  type: string
                  description: 'phone add.'
                  example: accusamus
                password_confirmation:
                  type: string
                  description: 'The value and <code>password</code> must match.'
                  example: culpa
              required:
                - token
                - password
                - password_confirmation
      security: []
  /api/login:
    post:
      summary: Login
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: ''
                  example: deleniti
                password:
                  type: string
                  description: ''
                  example: magnam
              required:
                - email
                - password
      security: []
  /api/admin/company:
    get:
      summary: 'Display a listing of the resource.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    post:
      summary: 'Store a newly created resource in storage.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name_ar:
                  type: string
                  description: ''
                  example: aut
                name_en:
                  type: string
                  description: ''
                  example: qui
                admin:
                  type: string
                  description: ''
                  example: quia
                phone:
                  type: string
                  description: ''
                  example: sapiente
                address:
                  type: string
                  description: ''
                  example: aut
                status:
                  type: string
                  description: ''
                  example: et
              required:
                - name_ar
                - name_en
                - admin
                - phone
                - address
                - status
      security: []
  '/api/admin/company/{id}':
    get:
      summary: 'Display the specified resource.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    put:
      summary: 'Update the specified resource in storage.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
    delete:
      summary: 'Remove the specified resource from storage.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the company.'
        example: 7
        required: true
        schema:
          type: integer
  /api/admin/event:
    get:
      summary: 'Display a listing of the resource.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    post:
      summary: 'Store a newly created resource in storage.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name_ar:
                  type: string
                  description: ''
                  example: harum
                name_en:
                  type: string
                  description: ''
                  example: in
                details_ar:
                  type: string
                  description: ''
                  example: quo
                details_en:
                  type: string
                  description: ''
                  example: sunt
                first_date:
                  type: string
                  description: ''
                  example: et
                last_date:
                  type: string
                  description: ''
                  example: dolorum
                ticket_count:
                  type: string
                  description: ''
                  example: odit
                image:
                  type: string
                  description: ''
                  example: ut
                status:
                  type: string
                  description: 'Must not be greater than 5 characters.'
                  example: olv
                company_id:
                  type: string
                  description: ''
                  example: quis
                coordinates:
                  type: string
                  description: ''
                  example: exercitationem
              required:
                - name_ar
                - name_en
                - details_ar
                - details_en
                - first_date
                - last_date
                - ticket_count
                - image
                - status
                - company_id
                - coordinates
      security: []
  '/api/admin/event/{id}':
    get:
      summary: 'Display the specified resource.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    put:
      summary: 'Update the specified resource in storage.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
    delete:
      summary: 'Remove the specified resource from storage.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the event.'
        example: 20
        required: true
        schema:
          type: integer
  /api/admin/order:
    get:
      summary: 'Display a listing of the resource.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    post:
      summary: 'Store a newly created resource in storage.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ticket:
                  type: string
                  description: ''
                  example: sint
                date_id:
                  type: string
                  description: ''
                  example: omnis
                event_id:
                  type: string
                  description: ''
                  example: nesciunt
                name:
                  type: string
                  description: ''
                  example: nisi
                phone:
                  type: string
                  description: ''
                  example: porro
              required:
                - ticket
                - date_id
                - event_id
                - name
                - phone
      security: []
  '/api/admin/order/{id}':
    get:
      summary: 'Display the specified resource.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    put:
      summary: 'Update the specified resource in storage.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
    delete:
      summary: 'Remove the specified resource from storage.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the order.'
        example: 17
        required: true
        schema:
          type: integer
  /api/admin/orderDetails:
    get:
      summary: 'Display a listing of the resource.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  '/api/admin/orderDetails/{id}':
    get:
      summary: 'Display the specified resource.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    put:
      summary: 'Update the specified resource in storage.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the orderDetail.'
        example: voluptatem
        required: true
        schema:
          type: string
  /api/admin/ticket:
    get:
      summary: 'Display a listing of the resource.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    post:
      summary: 'Store a newly created resource in storage.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                event_id:
                  type: string
                  description: ''
                  example: consequuntur
                amount:
                  type: string
                  description: ''
                  example: sunt
                name:
                  type: string
                  description: ''
                  example: vitae
                status:
                  type: string
                  description: ''
                  example: est
                details_ar:
                  type: string
                  description: ''
                  example: suscipit
                details_en:
                  type: string
                  description: ''
                  example: quisquam
              required:
                - event_id
                - amount
                - name
                - status
                - details_ar
                - details_en
      security: []
  '/api/admin/ticket/{id}':
    get:
      summary: 'Display the specified resource.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    put:
      summary: 'Update the specified resource in storage.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
    delete:
      summary: 'Remove the specified resource from storage.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the ticket.'
        example: 13
        required: true
        schema:
          type: integer
  /api/admin/date:
    get:
      summary: 'Display a listing of the resource.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    post:
      summary: 'Store a newly created resource in storage.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                event_id:
                  type: string
                  description: ''
                  example: ad
                date:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2021-09-19T10:49:25'
              required:
                - event_id
                - date
      security: []
  '/api/admin/date/{id}':
    get:
      summary: 'Display the specified resource.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    put:
      summary: 'Update the specified resource in storage.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
    delete:
      summary: 'Remove the specified resource from storage.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the date.'
        example: 4
        required: true
        schema:
          type: integer
  /api/admin/sponser:
    get:
      summary: 'Display a listing of the resource.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    post:
      summary: 'Store a newly created resource in storage.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name_ar:
                  type: string
                  description: ''
                  example: necessitatibus
                name_en:
                  type: string
                  description: ''
                  example: cum
                image:
                  type: string
                  description: ''
                  example: velit
                event_id:
                  type: string
                  description: ''
                  example: necessitatibus
              required:
                - name_ar
                - name_en
                - image
                - event_id
      security: []
  '/api/admin/sponser/{id}':
    get:
      summary: 'Display the specified resource.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    put:
      summary: 'Update the specified resource in storage.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
    delete:
      summary: 'Remove the specified resource from storage.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the sponser.'
        example: 1
        required: true
        schema:
          type: integer
  /api/admin/user:
    get:
      summary: 'Display a listing of the resource.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    post:
      summary: 'Store a newly created resource in storage.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: delectus
                email:
                  type: string
                  description: ''
                  example: ab
                password:
                  type: string
                  description: ''
                  example: error
                phone:
                  type: string
                  description: ''
                  example: enim
                type:
                  type: string
                  description: ''
                  example: ut
              required:
                - name
                - email
                - password
                - phone
                - type
      security: []
  '/api/admin/user/{id}':
    get:
      summary: 'Display the specified resource.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    put:
      summary: 'Upuser the specified resource in storage.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
    delete:
      summary: 'Remove the specified resource from storage.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the user.'
        example: 14
        required: true
        schema:
          type: integer
  /api/admin/changePassword:
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                old_password:
                  type: string
                  description: ''
                  example: nisi
                new_password:
                  type: string
                  description: ''
                  example: distinctio
                new_password_confirmation:
                  type: string
                  description: 'The value and <code>new_password</code> must match.'
                  example: nihil
              required:
                - old_password
                - new_password
                - new_password_confirmation
      security: []
  /api/admin/dashboard:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/user/event:
    get:
      summary: 'Display a listing of the resource.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    post:
      summary: 'Store a newly created resource in storage.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name_ar:
                  type: string
                  description: ''
                  example: voluptas
                name_en:
                  type: string
                  description: ''
                  example: tempore
                details_ar:
                  type: string
                  description: ''
                  example: libero
                details_en:
                  type: string
                  description: ''
                  example: cum
                first_date:
                  type: string
                  description: ''
                  example: accusantium
                last_date:
                  type: string
                  description: ''
                  example: suscipit
                ticket_count:
                  type: string
                  description: ''
                  example: et
                image:
                  type: string
                  description: ''
                  example: velit
                status:
                  type: string
                  description: 'Must not be greater than 5 characters.'
                  example: g
                coordinates:
                  type: string
                  description: ''
                  example: sapiente
              required:
                - name_ar
                - name_en
                - details_ar
                - details_en
                - first_date
                - last_date
                - ticket_count
                - image
                - status
                - coordinates
      security: []
  '/api/user/event/{id}':
    get:
      summary: 'Display the specified resource.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    put:
      summary: 'Update the specified resource in storage.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
    delete:
      summary: 'Remove the specified resource from storage.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the event.'
        example: 17
        required: true
        schema:
          type: integer
  /api/user/order:
    get:
      summary: 'Display a listing of the resource.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    post:
      summary: 'Store a newly created resource in storage.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ticket:
                  type: string
                  description: ''
                  example: nostrum
                date_id:
                  type: string
                  description: ''
                  example: necessitatibus
                event_id:
                  type: string
                  description: ''
                  example: et
                name:
                  type: string
                  description: ''
                  example: a
                phone:
                  type: string
                  description: ''
                  example: voluptatem
              required:
                - ticket
                - date_id
                - event_id
                - name
                - phone
      security: []
  '/api/user/order/{id}':
    get:
      summary: 'Display the specified resource.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    put:
      summary: 'Update the specified resource in storage.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
    delete:
      summary: 'Remove the specified resource from storage.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the order.'
        example: 16
        required: true
        schema:
          type: integer
  /api/user/orderDetails:
    get:
      summary: 'Display a listing of the resource.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  '/api/user/orderDetails/{id}':
    get:
      summary: 'Display the specified resource.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    put:
      summary: 'Update the specified resource in storage.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the orderDetail.'
        example: consequuntur
        required: true
        schema:
          type: string
  /api/user/ticket:
    get:
      summary: 'Display a listing of the resource.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    post:
      summary: 'Store a newly created resource in storage.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                event_id:
                  type: string
                  description: ''
                  example: harum
                amount:
                  type: string
                  description: ''
                  example: ex
                name:
                  type: string
                  description: ''
                  example: atque
                status:
                  type: string
                  description: ''
                  example: quia
                details_ar:
                  type: string
                  description: ''
                  example: voluptates
                details_en:
                  type: string
                  description: ''
                  example: maxime
              required:
                - event_id
                - amount
                - name
                - status
                - details_ar
                - details_en
      security: []
  '/api/user/ticket/{id}':
    get:
      summary: 'Display the specified resource.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    put:
      summary: 'Update the specified resource in storage.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
    delete:
      summary: 'Remove the specified resource from storage.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the ticket.'
        example: 5
        required: true
        schema:
          type: integer
  /api/user/date:
    get:
      summary: 'Display a listing of the resource.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    post:
      summary: 'Store a newly created resource in storage.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                event_id:
                  type: string
                  description: ''
                  example: delectus
                date:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2021-09-19T10:49:25'
              required:
                - event_id
                - date
      security: []
  '/api/user/date/{id}':
    get:
      summary: 'Display the specified resource.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    put:
      summary: 'Update the specified resource in storage.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
    delete:
      summary: 'Remove the specified resource from storage.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the date.'
        example: 12
        required: true
        schema:
          type: integer
  /api/user/sponser:
    get:
      summary: 'Display a listing of the resource.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    post:
      summary: 'Store a newly created resource in storage.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name_ar:
                  type: string
                  description: ''
                  example: et
                name_en:
                  type: string
                  description: ''
                  example: temporibus
                image:
                  type: string
                  description: ''
                  example: nulla
                event_id:
                  type: string
                  description: ''
                  example: tenetur
              required:
                - name_ar
                - name_en
                - image
                - event_id
      security: []
  '/api/user/sponser/{id}':
    get:
      summary: 'Display the specified resource.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    put:
      summary: 'Update the specified resource in storage.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
    delete:
      summary: 'Remove the specified resource from storage.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the sponser.'
        example: 12
        required: true
        schema:
          type: integer
  /api/user/user:
    get:
      summary: 'Display a listing of the resource.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    post:
      summary: 'Store a newly created resource in storage.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: et
                email:
                  type: string
                  description: ''
                  example: dolores
                password:
                  type: string
                  description: ''
                  example: consequatur
                type:
                  type: string
                  description: ''
                  example: laboriosam
              required:
                - name
                - email
                - password
                - type
      security: []
  '/api/user/user/{id}':
    get:
      summary: 'Display the specified resource.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    put:
      summary: 'Upuser the specified resource in storage.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
    delete:
      summary: 'Remove the specified resource from storage.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the user.'
        example: 11
        required: true
        schema:
          type: integer
  /api/user/changePassword:
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                old_password:
                  type: string
                  description: ''
                  example: est
                new_password:
                  type: string
                  description: ''
                  example: non
                new_password_confirmation:
                  type: string
                  description: 'The value and <code>new_password</code> must match.'
                  example: aut
              required:
                - old_password
                - new_password
                - new_password_confirmation
      security: []
  /api/user/dashboard:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  '/api/scan/orderStatus/{order_id}/{serial}':
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: order_id
        description: 'The ID of the order.'
        example: nesciunt
        required: true
        schema:
          type: string
      -
        in: path
        name: serial
        description: ''
        example: libero
        required: true
        schema:
          type: string
  /api/appname/events:
    get:
      summary: "return a list of all the current active events\n of all companies\n@"
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  responseCode: 100
                  responseMessage: success
                  responseDescription: 'found messages.model.event successfully'
                  data: []
                properties:
                  responseCode:
                    type: integer
                    example: 100
                  responseMessage:
                    type: string
                    example: success
                  responseDescription:
                    type: string
                    example: 'found messages.model.event successfully'
                  data:
                    type: array
                    example: []
      tags:
        - Endpoints
      security: []
  '/api/appname/{order_id}':
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: ''
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: order_id
        description: 'The ID of the order.'
        example: sunt
        required: true
        schema:
          type: string
  '/api/appname/pay/{order_id}':
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: order_id
        description: 'The ID of the order.'
        example: et
        required: true
        schema:
          type: string
  /api/test:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Failed to connect to Pusher.'
                  exception: Illuminate\Broadcasting\BroadcastException
                  file: /var/www/html/tickets/ticket/vendor/laravel/framework/src/Illuminate/Broadcasting/Broadcasters/PusherBroadcaster.php
                  line: 142
                  trace:
                    -
                      file: /var/www/html/tickets/ticket/vendor/laravel/framework/src/Illuminate/Broadcasting/BroadcastEvent.php
                      line: 77
                      function: broadcast
                      class: Illuminate\Broadcasting\Broadcasters\PusherBroadcaster
                      type: '->'
                    -
                      file: /var/www/html/tickets/ticket/vendor/laravel/framework/src/Illuminate/Container/BoundMethod.php
                      line: 36
                      function: handle
                      class: Illuminate\Broadcasting\BroadcastEvent
                      type: '->'
                    -
                      file: /var/www/html/tickets/ticket/vendor/laravel/framework/src/Illuminate/Container/Util.php
                      line: 40
                      function: 'Illuminate\Container\{closure}'
                      class: Illuminate\Container\BoundMethod
                      type: '::'
                    -
                      file: /var/www/html/tickets/ticket/vendor/laravel/framework/src/Illuminate/Container/BoundMethod.php
                      line: 93
                      function: unwrapIfClosure
                      class: Illuminate\Container\Util
                      type: '::'
                    -
                      file: /var/www/html/tickets/ticket/vendor/laravel/framework/src/Illuminate/Container/BoundMethod.php
                      line: 37
                      function: callBoundMethod
                      class: Illuminate\Container\BoundMethod
                      type: '::'
                    -
                      file: /var/www/html/tickets/ticket/vendor/laravel/framework/src/Illuminate/Container/Container.php
                      line: 651
                      function: call
                      class: Illuminate\Container\BoundMethod
                      type: '::'
                    -
                      file: /var/www/html/tickets/ticket/vendor/laravel/framework/src/Illuminate/Bus/Dispatcher.php
                      line: 128
                      function: call
                      class: Illuminate\Container\Container
                      type: '->'
                    -
                      file: /var/www/html/tickets/ticket/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 128
                      function: 'Illuminate\Bus\{closure}'
                      class: Illuminate\Bus\Dispatcher
                      type: '->'
                    -
                      file: /var/www/html/tickets/ticket/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 103
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /var/www/html/tickets/ticket/vendor/laravel/framework/src/Illuminate/Bus/Dispatcher.php
                      line: 132
                      function: then
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /var/www/html/tickets/ticket/vendor/laravel/framework/src/Illuminate/Queue/CallQueuedHandler.php
                      line: 120
                      function: dispatchNow
                      class: Illuminate\Bus\Dispatcher
                      type: '->'
                    -
                      file: /var/www/html/tickets/ticket/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 128
                      function: 'Illuminate\Queue\{closure}'
                      class: Illuminate\Queue\CallQueuedHandler
                      type: '->'
                    -
                      file: /var/www/html/tickets/ticket/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 103
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /var/www/html/tickets/ticket/vendor/laravel/framework/src/Illuminate/Queue/CallQueuedHandler.php
                      line: 122
                      function: then
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /var/www/html/tickets/ticket/vendor/laravel/framework/src/Illuminate/Queue/CallQueuedHandler.php
                      line: 70
                      function: dispatchThroughMiddleware
                      class: Illuminate\Queue\CallQueuedHandler
                      type: '->'
                    -
                      file: /var/www/html/tickets/ticket/vendor/laravel/framework/src/Illuminate/Queue/Jobs/Job.php
                      line: 98
                      function: call
                      class: Illuminate\Queue\CallQueuedHandler
                      type: '->'
                    -
                      file: /var/www/html/tickets/ticket/vendor/laravel/framework/src/Illuminate/Queue/SyncQueue.php
                      line: 43
                      function: fire
                      class: Illuminate\Queue\Jobs\Job
                      type: '->'
                    -
                      file: /var/www/html/tickets/ticket/vendor/laravel/framework/src/Illuminate/Queue/Queue.php
                      line: 57
                      function: push
                      class: Illuminate\Queue\SyncQueue
                      type: '->'
                    -
                      file: /var/www/html/tickets/ticket/vendor/laravel/framework/src/Illuminate/Broadcasting/BroadcastManager.php
                      line: 133
                      function: pushOn
                      class: Illuminate\Queue\Queue
                      type: '->'
                    -
                      file: /var/www/html/tickets/ticket/vendor/laravel/framework/src/Illuminate/Events/Dispatcher.php
                      line: 320
                      function: queue
                      class: Illuminate\Broadcasting\BroadcastManager
                      type: '->'
                    -
                      file: /var/www/html/tickets/ticket/vendor/laravel/framework/src/Illuminate/Events/Dispatcher.php
                      line: 243
                      function: broadcastEvent
                      class: Illuminate\Events\Dispatcher
                      type: '->'
                    -
                      file: /var/www/html/tickets/ticket/vendor/laravel/framework/src/Illuminate/Foundation/helpers.php
                      line: 450
                      function: dispatch
                      class: Illuminate\Events\Dispatcher
                      type: '->'
                    -
                      file: /var/www/html/tickets/ticket/routes/api.php
                      line: 124
                      function: event
                    -
                      file: /var/www/html/tickets/ticket/vendor/laravel/framework/src/Illuminate/Routing/Route.php
                      line: 237
                      function: '{closure}'
                      class: Illuminate\Routing\RouteFileRegistrar
                      type: '->'
                    -
                      file: /var/www/html/tickets/ticket/vendor/laravel/framework/src/Illuminate/Routing/Route.php
                      line: 207
                      function: runCallable
                      class: Illuminate\Routing\Route
                      type: '->'
                    -
                      file: /var/www/html/tickets/ticket/vendor/laravel/framework/src/Illuminate/Routing/Router.php
                      line: 695
                      function: run
                      class: Illuminate\Routing\Route
                      type: '->'
                    -
                      file: /var/www/html/tickets/ticket/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 128
                      function: 'Illuminate\Routing\{closure}'
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: /var/www/html/tickets/ticket/vendor/laravel/framework/src/Illuminate/Routing/Middleware/SubstituteBindings.php
                      line: 50
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /var/www/html/tickets/ticket/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 167
                      function: handle
                      class: Illuminate\Routing\Middleware\SubstituteBindings
                      type: '->'
                    -
                      file: /var/www/html/tickets/ticket/vendor/laravel/framework/src/Illuminate/Routing/Middleware/ThrottleRequests.php
                      line: 127
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /var/www/html/tickets/ticket/vendor/laravel/framework/src/Illuminate/Routing/Middleware/ThrottleRequests.php
                      line: 103
                      function: handleRequest
                      class: Illuminate\Routing\Middleware\ThrottleRequests
                      type: '->'
                    -
                      file: /var/www/html/tickets/ticket/vendor/laravel/framework/src/Illuminate/Routing/Middleware/ThrottleRequests.php
                      line: 55
                      function: handleRequestUsingNamedLimiter
                      class: Illuminate\Routing\Middleware\ThrottleRequests
                      type: '->'
                    -
                      file: /var/www/html/tickets/ticket/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 167
                      function: handle
                      class: Illuminate\Routing\Middleware\ThrottleRequests
                      type: '->'
                    -
                      file: /var/www/html/tickets/ticket/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 103
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /var/www/html/tickets/ticket/vendor/laravel/framework/src/Illuminate/Routing/Router.php
                      line: 697
                      function: then
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /var/www/html/tickets/ticket/vendor/laravel/framework/src/Illuminate/Routing/Router.php
                      line: 672
                      function: runRouteWithinStack
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: /var/www/html/tickets/ticket/vendor/laravel/framework/src/Illuminate/Routing/Router.php
                      line: 636
                      function: runRoute
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: /var/www/html/tickets/ticket/vendor/laravel/framework/src/Illuminate/Routing/Router.php
                      line: 625
                      function: dispatchToRoute
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: /var/www/html/tickets/ticket/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php
                      line: 166
                      function: dispatch
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: /var/www/html/tickets/ticket/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 128
                      function: 'Illuminate\Foundation\Http\{closure}'
                      class: Illuminate\Foundation\Http\Kernel
                      type: '->'
                    -
                      file: /var/www/html/tickets/ticket/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TransformsRequest.php
                      line: 21
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /var/www/html/tickets/ticket/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/ConvertEmptyStringsToNull.php
                      line: 31
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\TransformsRequest
                      type: '->'
                    -
                      file: /var/www/html/tickets/ticket/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 167
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\ConvertEmptyStringsToNull
                      type: '->'
                    -
                      file: /var/www/html/tickets/ticket/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TransformsRequest.php
                      line: 21
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /var/www/html/tickets/ticket/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TrimStrings.php
                      line: 40
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\TransformsRequest
                      type: '->'
                    -
                      file: /var/www/html/tickets/ticket/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 167
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\TrimStrings
                      type: '->'
                    -
                      file: /var/www/html/tickets/ticket/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/ValidatePostSize.php
                      line: 27
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /var/www/html/tickets/ticket/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 167
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\ValidatePostSize
                      type: '->'
                    -
                      file: /var/www/html/tickets/ticket/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/PreventRequestsDuringMaintenance.php
                      line: 86
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /var/www/html/tickets/ticket/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 167
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\PreventRequestsDuringMaintenance
                      type: '->'
                    -
                      file: /var/www/html/tickets/ticket/vendor/fruitcake/laravel-cors/src/HandleCors.php
                      line: 52
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /var/www/html/tickets/ticket/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 167
                      function: handle
                      class: Fruitcake\Cors\HandleCors
                      type: '->'
                    -
                      file: /var/www/html/tickets/ticket/vendor/laravel/framework/src/Illuminate/Http/Middleware/TrustProxies.php
                      line: 39
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /var/www/html/tickets/ticket/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 167
                      function: handle
                      class: Illuminate\Http\Middleware\TrustProxies
                      type: '->'
                    -
                      file: /var/www/html/tickets/ticket/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 103
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /var/www/html/tickets/ticket/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php
                      line: 141
                      function: then
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /var/www/html/tickets/ticket/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php
                      line: 110
                      function: sendRequestThroughRouter
                      class: Illuminate\Foundation\Http\Kernel
                      type: '->'
                    -
                      file: /var/www/html/tickets/ticket/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php
                      line: 287
                      function: handle
                      class: Illuminate\Foundation\Http\Kernel
                      type: '->'
                    -
                      file: /var/www/html/tickets/ticket/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php
                      line: 275
                      function: callLaravelOrLumenRoute
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: /var/www/html/tickets/ticket/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php
                      line: 86
                      function: makeApiCall
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: /var/www/html/tickets/ticket/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php
                      line: 44
                      function: makeResponseCall
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: /var/www/html/tickets/ticket/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php
                      line: 34
                      function: makeResponseCallIfConditionsPass
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: /var/www/html/tickets/ticket/vendor/knuckleswtf/scribe/src/Extracting/Extractor.php
                      line: 222
                      function: __invoke
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: /var/www/html/tickets/ticket/vendor/knuckleswtf/scribe/src/Extracting/Extractor.php
                      line: 179
                      function: iterateThroughStrategies
                      class: Knuckles\Scribe\Extracting\Extractor
                      type: '->'
                    -
                      file: /var/www/html/tickets/ticket/vendor/knuckleswtf/scribe/src/Extracting/Extractor.php
                      line: 116
                      function: fetchResponses
                      class: Knuckles\Scribe\Extracting\Extractor
                      type: '->'
                    -
                      file: /var/www/html/tickets/ticket/vendor/knuckleswtf/scribe/src/GroupedEndpoints/GroupedEndpointsFromApp.php
                      line: 118
                      function: processRoute
                      class: Knuckles\Scribe\Extracting\Extractor
                      type: '->'
                    -
                      file: /var/www/html/tickets/ticket/vendor/knuckleswtf/scribe/src/GroupedEndpoints/GroupedEndpointsFromApp.php
                      line: 75
                      function: extractEndpointsInfoFromLaravelApp
                      class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                      type: '->'
                    -
                      file: /var/www/html/tickets/ticket/vendor/knuckleswtf/scribe/src/GroupedEndpoints/GroupedEndpointsFromApp.php
                      line: 51
                      function: extractEndpointsInfoAndWriteToDisk
                      class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                      type: '->'
                    -
                      file: /var/www/html/tickets/ticket/vendor/knuckleswtf/scribe/src/Commands/GenerateDocumentation.php
                      line: 46
                      function: get
                      class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                      type: '->'
                    -
                      file: /var/www/html/tickets/ticket/vendor/laravel/framework/src/Illuminate/Container/BoundMethod.php
                      line: 36
                      function: handle
                      class: Knuckles\Scribe\Commands\GenerateDocumentation
                      type: '->'
                    -
                      file: /var/www/html/tickets/ticket/vendor/laravel/framework/src/Illuminate/Container/Util.php
                      line: 40
                      function: 'Illuminate\Container\{closure}'
                      class: Illuminate\Container\BoundMethod
                      type: '::'
                    -
                      file: /var/www/html/tickets/ticket/vendor/laravel/framework/src/Illuminate/Container/BoundMethod.php
                      line: 93
                      function: unwrapIfClosure
                      class: Illuminate\Container\Util
                      type: '::'
                    -
                      file: /var/www/html/tickets/ticket/vendor/laravel/framework/src/Illuminate/Container/BoundMethod.php
                      line: 37
                      function: callBoundMethod
                      class: Illuminate\Container\BoundMethod
                      type: '::'
                    -
                      file: /var/www/html/tickets/ticket/vendor/laravel/framework/src/Illuminate/Container/Container.php
                      line: 651
                      function: call
                      class: Illuminate\Container\BoundMethod
                      type: '::'
                    -
                      file: /var/www/html/tickets/ticket/vendor/laravel/framework/src/Illuminate/Console/Command.php
                      line: 136
                      function: call
                      class: Illuminate\Container\Container
                      type: '->'
                    -
                      file: /var/www/html/tickets/ticket/vendor/symfony/console/Command/Command.php
                      line: 299
                      function: execute
                      class: Illuminate\Console\Command
                      type: '->'
                    -
                      file: /var/www/html/tickets/ticket/vendor/laravel/framework/src/Illuminate/Console/Command.php
                      line: 121
                      function: run
                      class: Symfony\Component\Console\Command\Command
                      type: '->'
                    -
                      file: /var/www/html/tickets/ticket/vendor/symfony/console/Application.php
                      line: 978
                      function: run
                      class: Illuminate\Console\Command
                      type: '->'
                    -
                      file: /var/www/html/tickets/ticket/vendor/symfony/console/Application.php
                      line: 295
                      function: doRunCommand
                      class: Symfony\Component\Console\Application
                      type: '->'
                    -
                      file: /var/www/html/tickets/ticket/vendor/symfony/console/Application.php
                      line: 167
                      function: doRun
                      class: Symfony\Component\Console\Application
                      type: '->'
                    -
                      file: /var/www/html/tickets/ticket/vendor/laravel/framework/src/Illuminate/Console/Application.php
                      line: 92
                      function: run
                      class: Symfony\Component\Console\Application
                      type: '->'
                    -
                      file: /var/www/html/tickets/ticket/vendor/laravel/framework/src/Illuminate/Foundation/Console/Kernel.php
                      line: 129
                      function: run
                      class: Illuminate\Console\Application
                      type: '->'
                    -
                      file: /var/www/html/tickets/ticket/artisan
                      line: 37
                      function: handle
                      class: Illuminate\Foundation\Console\Kernel
                      type: '->'
                properties:
                  message:
                    type: string
                    example: 'Failed to connect to Pusher.'
                  exception:
                    type: string
                    example: Illuminate\Broadcasting\BroadcastException
                  file:
                    type: string
                    example: /var/www/html/tickets/ticket/vendor/laravel/framework/src/Illuminate/Broadcasting/Broadcasters/PusherBroadcaster.php
                  line:
                    type: integer
                    example: 142
                  trace:
                    type: array
                    example:
                      -
                        file: /var/www/html/tickets/ticket/vendor/laravel/framework/src/Illuminate/Broadcasting/BroadcastEvent.php
                        line: 77
                        function: broadcast
                        class: Illuminate\Broadcasting\Broadcasters\PusherBroadcaster
                        type: '->'
                      -
                        file: /var/www/html/tickets/ticket/vendor/laravel/framework/src/Illuminate/Container/BoundMethod.php
                        line: 36
                        function: handle
                        class: Illuminate\Broadcasting\BroadcastEvent
                        type: '->'
                      -
                        file: /var/www/html/tickets/ticket/vendor/laravel/framework/src/Illuminate/Container/Util.php
                        line: 40
                        function: 'Illuminate\Container\{closure}'
                        class: Illuminate\Container\BoundMethod
                        type: '::'
                      -
                        file: /var/www/html/tickets/ticket/vendor/laravel/framework/src/Illuminate/Container/BoundMethod.php
                        line: 93
                        function: unwrapIfClosure
                        class: Illuminate\Container\Util
                        type: '::'
                      -
                        file: /var/www/html/tickets/ticket/vendor/laravel/framework/src/Illuminate/Container/BoundMethod.php
                        line: 37
                        function: callBoundMethod
                        class: Illuminate\Container\BoundMethod
                        type: '::'
                      -
                        file: /var/www/html/tickets/ticket/vendor/laravel/framework/src/Illuminate/Container/Container.php
                        line: 651
                        function: call
                        class: Illuminate\Container\BoundMethod
                        type: '::'
                      -
                        file: /var/www/html/tickets/ticket/vendor/laravel/framework/src/Illuminate/Bus/Dispatcher.php
                        line: 128
                        function: call
                        class: Illuminate\Container\Container
                        type: '->'
                      -
                        file: /var/www/html/tickets/ticket/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 128
                        function: 'Illuminate\Bus\{closure}'
                        class: Illuminate\Bus\Dispatcher
                        type: '->'
                      -
                        file: /var/www/html/tickets/ticket/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 103
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /var/www/html/tickets/ticket/vendor/laravel/framework/src/Illuminate/Bus/Dispatcher.php
                        line: 132
                        function: then
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /var/www/html/tickets/ticket/vendor/laravel/framework/src/Illuminate/Queue/CallQueuedHandler.php
                        line: 120
                        function: dispatchNow
                        class: Illuminate\Bus\Dispatcher
                        type: '->'
                      -
                        file: /var/www/html/tickets/ticket/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 128
                        function: 'Illuminate\Queue\{closure}'
                        class: Illuminate\Queue\CallQueuedHandler
                        type: '->'
                      -
                        file: /var/www/html/tickets/ticket/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 103
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /var/www/html/tickets/ticket/vendor/laravel/framework/src/Illuminate/Queue/CallQueuedHandler.php
                        line: 122
                        function: then
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /var/www/html/tickets/ticket/vendor/laravel/framework/src/Illuminate/Queue/CallQueuedHandler.php
                        line: 70
                        function: dispatchThroughMiddleware
                        class: Illuminate\Queue\CallQueuedHandler
                        type: '->'
                      -
                        file: /var/www/html/tickets/ticket/vendor/laravel/framework/src/Illuminate/Queue/Jobs/Job.php
                        line: 98
                        function: call
                        class: Illuminate\Queue\CallQueuedHandler
                        type: '->'
                      -
                        file: /var/www/html/tickets/ticket/vendor/laravel/framework/src/Illuminate/Queue/SyncQueue.php
                        line: 43
                        function: fire
                        class: Illuminate\Queue\Jobs\Job
                        type: '->'
                      -
                        file: /var/www/html/tickets/ticket/vendor/laravel/framework/src/Illuminate/Queue/Queue.php
                        line: 57
                        function: push
                        class: Illuminate\Queue\SyncQueue
                        type: '->'
                      -
                        file: /var/www/html/tickets/ticket/vendor/laravel/framework/src/Illuminate/Broadcasting/BroadcastManager.php
                        line: 133
                        function: pushOn
                        class: Illuminate\Queue\Queue
                        type: '->'
                      -
                        file: /var/www/html/tickets/ticket/vendor/laravel/framework/src/Illuminate/Events/Dispatcher.php
                        line: 320
                        function: queue
                        class: Illuminate\Broadcasting\BroadcastManager
                        type: '->'
                      -
                        file: /var/www/html/tickets/ticket/vendor/laravel/framework/src/Illuminate/Events/Dispatcher.php
                        line: 243
                        function: broadcastEvent
                        class: Illuminate\Events\Dispatcher
                        type: '->'
                      -
                        file: /var/www/html/tickets/ticket/vendor/laravel/framework/src/Illuminate/Foundation/helpers.php
                        line: 450
                        function: dispatch
                        class: Illuminate\Events\Dispatcher
                        type: '->'
                      -
                        file: /var/www/html/tickets/ticket/routes/api.php
                        line: 124
                        function: event
                      -
                        file: /var/www/html/tickets/ticket/vendor/laravel/framework/src/Illuminate/Routing/Route.php
                        line: 237
                        function: '{closure}'
                        class: Illuminate\Routing\RouteFileRegistrar
                        type: '->'
                      -
                        file: /var/www/html/tickets/ticket/vendor/laravel/framework/src/Illuminate/Routing/Route.php
                        line: 207
                        function: runCallable
                        class: Illuminate\Routing\Route
                        type: '->'
                      -
                        file: /var/www/html/tickets/ticket/vendor/laravel/framework/src/Illuminate/Routing/Router.php
                        line: 695
                        function: run
                        class: Illuminate\Routing\Route
                        type: '->'
                      -
                        file: /var/www/html/tickets/ticket/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 128
                        function: 'Illuminate\Routing\{closure}'
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: /var/www/html/tickets/ticket/vendor/laravel/framework/src/Illuminate/Routing/Middleware/SubstituteBindings.php
                        line: 50
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /var/www/html/tickets/ticket/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 167
                        function: handle
                        class: Illuminate\Routing\Middleware\SubstituteBindings
                        type: '->'
                      -
                        file: /var/www/html/tickets/ticket/vendor/laravel/framework/src/Illuminate/Routing/Middleware/ThrottleRequests.php
                        line: 127
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /var/www/html/tickets/ticket/vendor/laravel/framework/src/Illuminate/Routing/Middleware/ThrottleRequests.php
                        line: 103
                        function: handleRequest
                        class: Illuminate\Routing\Middleware\ThrottleRequests
                        type: '->'
                      -
                        file: /var/www/html/tickets/ticket/vendor/laravel/framework/src/Illuminate/Routing/Middleware/ThrottleRequests.php
                        line: 55
                        function: handleRequestUsingNamedLimiter
                        class: Illuminate\Routing\Middleware\ThrottleRequests
                        type: '->'
                      -
                        file: /var/www/html/tickets/ticket/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 167
                        function: handle
                        class: Illuminate\Routing\Middleware\ThrottleRequests
                        type: '->'
                      -
                        file: /var/www/html/tickets/ticket/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 103
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /var/www/html/tickets/ticket/vendor/laravel/framework/src/Illuminate/Routing/Router.php
                        line: 697
                        function: then
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /var/www/html/tickets/ticket/vendor/laravel/framework/src/Illuminate/Routing/Router.php
                        line: 672
                        function: runRouteWithinStack
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: /var/www/html/tickets/ticket/vendor/laravel/framework/src/Illuminate/Routing/Router.php
                        line: 636
                        function: runRoute
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: /var/www/html/tickets/ticket/vendor/laravel/framework/src/Illuminate/Routing/Router.php
                        line: 625
                        function: dispatchToRoute
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: /var/www/html/tickets/ticket/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php
                        line: 166
                        function: dispatch
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: /var/www/html/tickets/ticket/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 128
                        function: 'Illuminate\Foundation\Http\{closure}'
                        class: Illuminate\Foundation\Http\Kernel
                        type: '->'
                      -
                        file: /var/www/html/tickets/ticket/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TransformsRequest.php
                        line: 21
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /var/www/html/tickets/ticket/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/ConvertEmptyStringsToNull.php
                        line: 31
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\TransformsRequest
                        type: '->'
                      -
                        file: /var/www/html/tickets/ticket/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 167
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\ConvertEmptyStringsToNull
                        type: '->'
                      -
                        file: /var/www/html/tickets/ticket/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TransformsRequest.php
                        line: 21
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /var/www/html/tickets/ticket/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TrimStrings.php
                        line: 40
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\TransformsRequest
                        type: '->'
                      -
                        file: /var/www/html/tickets/ticket/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 167
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\TrimStrings
                        type: '->'
                      -
                        file: /var/www/html/tickets/ticket/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/ValidatePostSize.php
                        line: 27
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /var/www/html/tickets/ticket/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 167
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\ValidatePostSize
                        type: '->'
                      -
                        file: /var/www/html/tickets/ticket/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/PreventRequestsDuringMaintenance.php
                        line: 86
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /var/www/html/tickets/ticket/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 167
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\PreventRequestsDuringMaintenance
                        type: '->'
                      -
                        file: /var/www/html/tickets/ticket/vendor/fruitcake/laravel-cors/src/HandleCors.php
                        line: 52
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /var/www/html/tickets/ticket/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 167
                        function: handle
                        class: Fruitcake\Cors\HandleCors
                        type: '->'
                      -
                        file: /var/www/html/tickets/ticket/vendor/laravel/framework/src/Illuminate/Http/Middleware/TrustProxies.php
                        line: 39
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /var/www/html/tickets/ticket/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 167
                        function: handle
                        class: Illuminate\Http\Middleware\TrustProxies
                        type: '->'
                      -
                        file: /var/www/html/tickets/ticket/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 103
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /var/www/html/tickets/ticket/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php
                        line: 141
                        function: then
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /var/www/html/tickets/ticket/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php
                        line: 110
                        function: sendRequestThroughRouter
                        class: Illuminate\Foundation\Http\Kernel
                        type: '->'
                      -
                        file: /var/www/html/tickets/ticket/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php
                        line: 287
                        function: handle
                        class: Illuminate\Foundation\Http\Kernel
                        type: '->'
                      -
                        file: /var/www/html/tickets/ticket/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php
                        line: 275
                        function: callLaravelOrLumenRoute
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: /var/www/html/tickets/ticket/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php
                        line: 86
                        function: makeApiCall
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: /var/www/html/tickets/ticket/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php
                        line: 44
                        function: makeResponseCall
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: /var/www/html/tickets/ticket/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php
                        line: 34
                        function: makeResponseCallIfConditionsPass
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: /var/www/html/tickets/ticket/vendor/knuckleswtf/scribe/src/Extracting/Extractor.php
                        line: 222
                        function: __invoke
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: /var/www/html/tickets/ticket/vendor/knuckleswtf/scribe/src/Extracting/Extractor.php
                        line: 179
                        function: iterateThroughStrategies
                        class: Knuckles\Scribe\Extracting\Extractor
                        type: '->'
                      -
                        file: /var/www/html/tickets/ticket/vendor/knuckleswtf/scribe/src/Extracting/Extractor.php
                        line: 116
                        function: fetchResponses
                        class: Knuckles\Scribe\Extracting\Extractor
                        type: '->'
                      -
                        file: /var/www/html/tickets/ticket/vendor/knuckleswtf/scribe/src/GroupedEndpoints/GroupedEndpointsFromApp.php
                        line: 118
                        function: processRoute
                        class: Knuckles\Scribe\Extracting\Extractor
                        type: '->'
                      -
                        file: /var/www/html/tickets/ticket/vendor/knuckleswtf/scribe/src/GroupedEndpoints/GroupedEndpointsFromApp.php
                        line: 75
                        function: extractEndpointsInfoFromLaravelApp
                        class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                        type: '->'
                      -
                        file: /var/www/html/tickets/ticket/vendor/knuckleswtf/scribe/src/GroupedEndpoints/GroupedEndpointsFromApp.php
                        line: 51
                        function: extractEndpointsInfoAndWriteToDisk
                        class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                        type: '->'
                      -
                        file: /var/www/html/tickets/ticket/vendor/knuckleswtf/scribe/src/Commands/GenerateDocumentation.php
                        line: 46
                        function: get
                        class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                        type: '->'
                      -
                        file: /var/www/html/tickets/ticket/vendor/laravel/framework/src/Illuminate/Container/BoundMethod.php
                        line: 36
                        function: handle
                        class: Knuckles\Scribe\Commands\GenerateDocumentation
                        type: '->'
                      -
                        file: /var/www/html/tickets/ticket/vendor/laravel/framework/src/Illuminate/Container/Util.php
                        line: 40
                        function: 'Illuminate\Container\{closure}'
                        class: Illuminate\Container\BoundMethod
                        type: '::'
                      -
                        file: /var/www/html/tickets/ticket/vendor/laravel/framework/src/Illuminate/Container/BoundMethod.php
                        line: 93
                        function: unwrapIfClosure
                        class: Illuminate\Container\Util
                        type: '::'
                      -
                        file: /var/www/html/tickets/ticket/vendor/laravel/framework/src/Illuminate/Container/BoundMethod.php
                        line: 37
                        function: callBoundMethod
                        class: Illuminate\Container\BoundMethod
                        type: '::'
                      -
                        file: /var/www/html/tickets/ticket/vendor/laravel/framework/src/Illuminate/Container/Container.php
                        line: 651
                        function: call
                        class: Illuminate\Container\BoundMethod
                        type: '::'
                      -
                        file: /var/www/html/tickets/ticket/vendor/laravel/framework/src/Illuminate/Console/Command.php
                        line: 136
                        function: call
                        class: Illuminate\Container\Container
                        type: '->'
                      -
                        file: /var/www/html/tickets/ticket/vendor/symfony/console/Command/Command.php
                        line: 299
                        function: execute
                        class: Illuminate\Console\Command
                        type: '->'
                      -
                        file: /var/www/html/tickets/ticket/vendor/laravel/framework/src/Illuminate/Console/Command.php
                        line: 121
                        function: run
                        class: Symfony\Component\Console\Command\Command
                        type: '->'
                      -
                        file: /var/www/html/tickets/ticket/vendor/symfony/console/Application.php
                        line: 978
                        function: run
                        class: Illuminate\Console\Command
                        type: '->'
                      -
                        file: /var/www/html/tickets/ticket/vendor/symfony/console/Application.php
                        line: 295
                        function: doRunCommand
                        class: Symfony\Component\Console\Application
                        type: '->'
                      -
                        file: /var/www/html/tickets/ticket/vendor/symfony/console/Application.php
                        line: 167
                        function: doRun
                        class: Symfony\Component\Console\Application
                        type: '->'
                      -
                        file: /var/www/html/tickets/ticket/vendor/laravel/framework/src/Illuminate/Console/Application.php
                        line: 92
                        function: run
                        class: Symfony\Component\Console\Application
                        type: '->'
                      -
                        file: /var/www/html/tickets/ticket/vendor/laravel/framework/src/Illuminate/Foundation/Console/Kernel.php
                        line: 129
                        function: run
                        class: Illuminate\Console\Application
                        type: '->'
                      -
                        file: /var/www/html/tickets/ticket/artisan
                        line: 37
                        function: handle
                        class: Illuminate\Foundation\Console\Kernel
                        type: '->'
                    items:
                      type: object
      tags:
        - Endpoints
      security: []
tags:
  -
    name: Endpoints
    description: ''
